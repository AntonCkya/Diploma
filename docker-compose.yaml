version: '3.8'

services:
  music:
    build:
      context: ./music
      dockerfile: Dockerfile
    container_name: music_service
    ports:
      - "8000:8000"
    env_file:
      - ./music/.env
    networks:
      - microservices_network
    restart: unless-stopped

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth_service
    ports:
      - "8001:8001"
    env_file:
      - ./auth/.env
    networks:
      - microservices_network
    restart: unless-stopped

  sample:
    build:
      context: ./sample
      dockerfile: Dockerfile
    container_name: sample_service
    ports:
      - "8002:8002"
    env_file:
      - ./sample/.env
    networks:
      - microservices_network
    restart: unless-stopped

  stream:
    build:
      context: ./stream
      dockerfile: Dockerfile
    container_name: stream_service
    ports:
      - "8004:8004"
    env_file:
      - ./stream/.env
    networks:
      - microservices_network
    volumes:
      - ./stream_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx_gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - auth
      - music
      - sample
      - stream
    networks:
      - microservices_network
    restart: unless-stopped

volumes:
  stream_data:

networks:
  microservices_network:
    driver: bridge
